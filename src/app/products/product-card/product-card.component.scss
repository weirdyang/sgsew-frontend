
:host {
  --primary: #00d1b2;
  --primary-invert: #fff;
  --base-hue: 171;
  --primary-light: hsl(var(--base-hue), 100%, 96%);
  --primary-dark: #00947e;
  --link: hsl(25, 88%, 76%);
  --danger: #dc1c13;
  --shadow-base: 0 0 0;
  --shadow-1: rgb(var(--shadow-base) / 26%);
  --shadow-2: rgb(var(--shadow-base) / 28%);
  --shadow-3: rgb(var(--shadow-base) / 22%);
  box-sizing: border-box;
  text-overflow: ellipsis;
  * {
    box-sizing: border-box;
  }

  &:nth-child(odd):not(:first-child) {
    .brand-tag:not(.category) {
      filter: hue-rotate(150deg);
    }
  }
  &:nth-child(even) {
    .brand-tag:not(.category) {
      filter: hue-rotate(200deg) !important;
    }
  }
}


@mixin styled-scrollbar {
  overflow-y: auto;
  overflow-x: hidden;
  &::-webkit-scrollbar {
    width: 3em;
  }

  &::-webkit-scrollbar-track {
    background-color: var(--shadow-3);
    opacity: 0.2;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--shadow-1);
    outline: 0.25rem var(--shadow-1);
  }
}
@mixin hide-scrollbar {
  overflow-x: hidden;
  overflow-y: auto;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer 10+ */
  &::-webkit-scrollbar {
    /* WebKit */
    width: 0;
    height: 0;
  }
}
$card-width: 315px;
$breakpoint-narrow: 350px;

.card.dark {
  color: #e3e3e3;
  background: #232837;
  --primary-light: hsl(127, 73%, 25%);
  --link: hsl(271, 91%, 55%);
}
.service {
  background: hsl(var(--base-hue), 100%, 26%)!important;
  color: var(--primary-invert);
}
.card {
  box-sizing: border-box;
  height: 100%;
  display: flex;
  padding: 1rem 1rem;
  flex-direction: column;
  justify-content: flex-start;
  width: 100%;
  gap: 1rem;
  border: 1px solid black;
  border-radius: 2rem;
  background: #fff;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 2px 2px rgba(0, 0, 0, 0.15),
    0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.15);
  @media screen and (max-width: 376) {
    padding: 1rem 1.25rem;

  }
}
.title {
  margin-top: 0;
  overflow-wrap: break-word;
}
.title + .subtitle {
  margin-top: -0.75rem;
  margin-bottom: 0;
}
.brand-tag {
  border-radius: 0.375rem;
  border: 1px solid black;
  padding: 0.25rem 0.5rem;
  margin: 0.25rem 0;
  background: var(--primary-light);
  font-weight: 400;
  &.category {
    text-transform: capitalize;
    background: var(--link);
  }
}
.card-header {
  min-height: 100px;
  margin-bottom: -1rem;
}
.card-image {
  display: flex;
  flex-direction: row;
  justify-content: center;
  img {
    max-width: $card-width - 16px - 16px;
    margin: auto;
    border-radius: 0.25rem;
    padding: 0;
    border: 1px solid rgb(0 0 0 / 20%);
  }
}

.card-content {
  padding: 0.25rem;
  &:hover {
    .card-content-item.description {
      box-shadow: 0 0 0 1px var(--shadow-3);
      border-radius: 0.25rem;
    }
  }
  &:last-child {
    margin-bottom: 0.75rem;
  }
  p {
    font-weight: 200;
  }
  .card-content-item {
    &:not(last-child) {
      margin-bottom: 1rem;
    }
    @media screen and (min-width: 400px) {
      display: grid;
      grid-template-columns: auto 1fr;
    }
    .item-icon {
      margin-right: 0;
      padding-right: 0;
      @media screen and (max-width: $breakpoint-narrow) {
        display: none;
      }
    }
    .item-text {
      @media screen and (max-width: $breakpoint-narrow) {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }
      word-break: break-word;
      text-overflow: ellipsis;
      &-header {
        text-transform: capitalize;
        font-weight: 500;
        margin-right: 1ch;
        @media screen and (max-width: $breakpoint-narrow) {
          margin-right: 0;
        }
      }
      &.description {
        @include hide-scrollbar;
        max-height: 15ex;
      }
    }
  }
}

.card-footer {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
  margin-top: auto;
}
$border-width: 1.25px;
.button:disabled {
  cursor: not-allowed;
  pointer-events: all !important;
  background: inherit !important;
  filter: brightness(0.5) !important;
  color: rgb(0 0 0 / 20%);
  &:hover {
    background: inherit !important;
    filter: brightness(0.5) !important;
  }
}
@mixin color-button($color, $surface) {
  border: $border-width solid $surface;
  background: $color;
  color: $surface;
  &:hover {
    border: $border-width solid $color;
    color: $color;
    background: transparent;
  }
}

.tag-group {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-content: flex-start;
  .brand-tag {
      &:not(last-child){
          margin-right: 1rem;
      }
  }
}
